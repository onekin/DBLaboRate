Index: app/manifest.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\n  \"name\": \"DBLPExtension\",\n  \"short_name\": \"DBLPExtension\",\n  \"description\": \"New DBLP charts!\",\n  \"version\": \"0.1.1\",\n  \"manifest_version\": 3,\n  \"icons\": {\n    \"16\": \"images/icon16.png\",\n    \"48\": \"images/icon48.png\",\n    \"128\": \"images/icon128.png\"\n  },\n  \"background\": {\n    \"service_worker\": \"scripts/background.js\"\n  },\n  \"content_scripts\": [\n    {\n      \"matches\": [\"https://dblp.org/pid/*\"],\n      \"js\": [\"scripts/contentScript.js\"],\n      \"css\": [\"styles/contentScript.css\"],\n      \"run_at\": \"document_start\",\n      \"all_frames\": false\n    }\n  ],\n  \"action\": {\n    \"default_icon\": \"images/icon48.png\",\n    \"default_title\": \"DBLPExtension\"\n  },\n  \"options_page\": \"pages/options.html\",\n  \"options_ui\": {\n    \"page\": \"pages/options.html\",\n    \"open_in_tab\": true\n  },\n  \"permissions\": [\n\n  ],\n  \"web_accessible_resources\": [\n    {\n      \"resources\": [\n        \"pages/*\",\n        \"images/*\"\n      ],\n      \"matches\": [\n        \"*://*/*\"\n      ]\n    }\n  ]\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/manifest.json b/app/manifest.json
--- a/app/manifest.json	(revision 6b4dcce0a4b6d83e253bfbc9d644441861c86f9c)
+++ b/app/manifest.json	(date 1700131806729)
@@ -2,7 +2,7 @@
   "name": "DBLPExtension",
   "short_name": "DBLPExtension",
   "description": "New DBLP charts!",
-  "version": "0.1.1",
+  "version": "0.1.2",
   "manifest_version": 3,
   "icons": {
     "16": "images/icon16.png",
@@ -31,7 +31,9 @@
     "open_in_tab": true
   },
   "permissions": [
-
+    "storage",
+    "tabs",
+    "unlimitedStorage"
   ],
   "web_accessible_resources": [
     {
Index: app/scripts/charts/AuthorCollaborations.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import Chart from 'chart.js/auto'\n\nclass AuthorCollaborations {\n  constructor () {\n    this.myChart = null\n    this.myLargeChart = null\n    this.configuration = null\n  }\n\n  async init (xmlDoc) {\n    try {\n      const result = xmlDoc\n      const publications = result.querySelectorAll('dblpperson > r')\n      const specificAuthor = result.querySelector('dblpperson > person > author').textContent\n      const categorizedCoAuthors = this.countCoAuthors(publications || [], specificAuthor)\n      await this.createChart(categorizedCoAuthors)\n    } catch (error) {\n      console.error('An error occurred:', error)\n    }\n  }\n\n  countCoAuthors(publications, specificAuthor) {\n    const publicationsByCoAuthors = {}\n    const coAuthorsByYear = {}\n\n    Array.from(publications).forEach(publication => {\n      let authors = Array.from(publication.children[0].children)\n        .filter(element => element.tagName === 'author')\n        .map(author => author.textContent);\n      let yearElement = Array.from(publication.children[0].children)\n        .find(element => element.tagName === 'year');\n      if (yearElement) {\n        let year = parseInt(yearElement.innerHTML);\n        authors = authors.filter(authorName => authorName !== specificAuthor);\n        authors.forEach(authorName => {\n          if (!publicationsByCoAuthors[authorName]) {\n            publicationsByCoAuthors[authorName] = {};\n          }\n          if (!publicationsByCoAuthors[authorName][year]) {\n            publicationsByCoAuthors[authorName][year] = [];\n          }\n          publicationsByCoAuthors[authorName][year].push(publication);\n\n          if (!coAuthorsByYear[year]) {\n            coAuthorsByYear[year] = new Set();\n          }\n          coAuthorsByYear[year].add(authorName);\n        });\n      }\n    });\n\n    // Define helper functions for categorization\n    const isCloseColleague = (coAuthor, year) => {\n      const years = Object.keys(publicationsByCoAuthors[coAuthor]).map(Number);\n      return years.filter(y => y >= year - 3 && y <= year).length >= 3;\n    }\n\n    const isAcquaintance = (coAuthor, year) => {\n      const years = Object.keys(publicationsByCoAuthors[coAuthor]).map(Number);\n      let count = 0;\n      for (let y = year - 4; y <= year; y++) {\n        if (years.includes(y)) {\n          count++;\n          if (count >= 3) return true;\n        }\n      }\n      return false;\n    }\n\n    const isCollaborator = (coAuthor, year) => {\n      const years = Object.keys(publicationsByCoAuthors[coAuthor]).map(Number);\n      return Math.min(...years) === parseInt(year);\n    }\n\n    // Categorize each co-author for each year\n    const categorizedCoAuthors = {};\n    Object.keys(coAuthorsByYear).forEach(year => {\n      categorizedCoAuthors[year] = { closeColleague: 0, acquaintance: 0, collaborator: 0 };\n      coAuthorsByYear[year].forEach(coAuthor => {\n        if (isCloseColleague(coAuthor, year)) {\n          categorizedCoAuthors[year].closeColleague++;\n        } else if (isAcquaintance(coAuthor, year)) {\n          categorizedCoAuthors[year].acquaintance++;\n        } else if (isCollaborator(coAuthor, year)) {\n          categorizedCoAuthors[year].collaborator++;\n        }\n      });\n    });\n\n    return categorizedCoAuthors;\n  }\n\n  // Function to create and save the chart\n  async createChart (categorizedCoAuthors) {\n    const sortedYears = Object.keys(categorizedCoAuthors).sort((a, b) => a - b)\n\n    const datasets = [\n      {\n        label: 'Close Colleagues',\n        data: sortedYears.map(year => categorizedCoAuthors[year].closeColleague),\n        backgroundColor: 'rgba(255, 99, 132)',\n        stack: 'stacked'\n      },\n      {\n        label: 'Acquaintances',\n        data: sortedYears.map(year => categorizedCoAuthors[year].acquaintance),\n        backgroundColor: 'rgba(54, 162, 235)',\n        stack: 'stacked'\n      },\n      {\n        label: 'Collaborators',\n        data: sortedYears.map(year => categorizedCoAuthors[year].collaborator),\n        backgroundColor: 'rgba(75, 192, 192)',\n        stack: 'stacked'\n      }\n    ]\n\n    this.configuration = {\n      type: 'bar',\n      data: {\n        labels: sortedYears,\n        datasets: datasets\n      },\n      options: {\n        scales: {\n          x: {\n            stacked: true\n          },\n          y: {\n            stacked: true,\n            beginAtZero: true,\n            ticks: {\n              stepSize: 1\n            }\n          }\n        },\n        plugins: {\n          legend: {\n            display: true,\n            align: 'start'\n          }\n        }\n      }\n    }\n\n    // Create normal canvas element\n    const normalCanvas = document.createElement('canvas')\n    normalCanvas.id = 'myChart'\n    normalCanvas.width = 800\n    normalCanvas.height = 600\n\n    // Create large canvas element\n    const largeCanvas = document.createElement('canvas')\n    largeCanvas.id = 'myLargeChart'\n    largeCanvas.width = 1100 // Example large size, adjust as needed\n    largeCanvas.height = 700 // Example large size, adjust as needed\n\n    // Ensure this event handler is added in the createChart function after creating the chart instance\n    normalCanvas.addEventListener('click', () => {\n      this.toggleChartModal(normalCanvas, largeCanvas, categorizedCoAuthors, true) // Use an arrow function here\n    })\n\n    // Append normal canvas to the page\n    let div = document.getElementById('authorpage-refine')\n    let title = document.createElement('p')\n    let text = document.createElement('b')\n    text.innerHTML = 'CoAuthor categories'\n    title.appendChild(text)\n    div.insertBefore(normalCanvas, div.firstChild)\n    div.insertBefore(title, normalCanvas)\n\n    // Get the context of the normal canvas and create the chart\n    const normalCtx = normalCanvas.getContext('2d')\n    this.myChart = new Chart(normalCtx, this.configuration)\n  }\n\n  toggleChartModal (normalCanvas, largeCanvas, categorizedCoAuthors, enlarge) {\n    let backdrop = document.querySelector('.modal-backdrop')\n    if (!backdrop) {\n      backdrop = document.createElement('div')\n      backdrop.classList.add('modal-backdrop')\n      backdrop.style.display = 'none' // Initially hidden\n      document.body.appendChild(backdrop)\n    }\n\n    if (enlarge) {\n      // Apply modal-specific styles\n      largeCanvas.classList.add('modal-canvas', 'modal-view')\n\n      // Always remove the old chart and create a new one for consistency\n      if (this.myLargeChart) {\n        this.myLargeChart.destroy() // Destroy the old chart instance\n      }\n      // Get the context of the large canvas\n      const largeCtx = largeCanvas.getContext('2d')\n      // Clone the chart configuration and adjust as needed for the larger size\n      let largeConfiguration = JSON.parse(JSON.stringify(this.configuration))\n      largeConfiguration.options.maintainAspectRatio = false\n      // Adjust other configuration options as needed\n      largeConfiguration.options.scales.x.ticks.autoSkip = false\n      largeConfiguration.options.scales.x.ticks.maxRotation = 90\n\n      this.myLargeChart = new Chart(largeCtx, largeConfiguration) // Create a new chart instance\n\n      backdrop.appendChild(largeCanvas)\n      backdrop.style.display = 'flex'\n      normalCanvas.style.display = 'none' // Hide the normal canvas\n\n      backdrop.onclick = () => {\n        this.toggleChartModal(normalCanvas, largeCanvas, categorizedCoAuthors, false)\n      }\n    } else {\n      // Remove modal-specific styles\n      largeCanvas.classList.remove('modal-canvas', 'modal-view')\n\n      // Move the normal canvas back into the main page and hide the modal\n      backdrop.removeChild(largeCanvas)\n      backdrop.style.display = 'none'\n      normalCanvas.style.display = 'block' // Show the normal canvas\n\n      // If needed, update the normal chart instance\n      this.myChart.update()\n    }\n  }\n}\n\nexport default AuthorCollaborations\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/scripts/charts/AuthorCollaborations.js b/app/scripts/charts/AuthorCollaborations.js
--- a/app/scripts/charts/AuthorCollaborations.js	(revision 6b4dcce0a4b6d83e253bfbc9d644441861c86f9c)
+++ b/app/scripts/charts/AuthorCollaborations.js	(date 1700130733483)
@@ -7,87 +7,87 @@
     this.configuration = null
   }
 
-  async init (xmlDoc) {
+  async init (xmlDoc, closeColleagueParameter, acquaintanceParameter) {
     try {
       const result = xmlDoc
       const publications = result.querySelectorAll('dblpperson > r')
       const specificAuthor = result.querySelector('dblpperson > person > author').textContent
-      const categorizedCoAuthors = this.countCoAuthors(publications || [], specificAuthor)
+      const categorizedCoAuthors = this.countCoAuthors(publications || [], specificAuthor, closeColleagueParameter, acquaintanceParameter)
       await this.createChart(categorizedCoAuthors)
     } catch (error) {
       console.error('An error occurred:', error)
     }
   }
 
-  countCoAuthors(publications, specificAuthor) {
+  countCoAuthors (publications, specificAuthor, closeColleagueParameter, acquaintanceParameter) {
     const publicationsByCoAuthors = {}
     const coAuthorsByYear = {}
 
     Array.from(publications).forEach(publication => {
       let authors = Array.from(publication.children[0].children)
         .filter(element => element.tagName === 'author')
-        .map(author => author.textContent);
+        .map(author => author.textContent)
       let yearElement = Array.from(publication.children[0].children)
-        .find(element => element.tagName === 'year');
+        .find(element => element.tagName === 'year')
       if (yearElement) {
-        let year = parseInt(yearElement.innerHTML);
-        authors = authors.filter(authorName => authorName !== specificAuthor);
+        let year = parseInt(yearElement.innerHTML)
+        authors = authors.filter(authorName => authorName !== specificAuthor)
         authors.forEach(authorName => {
           if (!publicationsByCoAuthors[authorName]) {
-            publicationsByCoAuthors[authorName] = {};
+            publicationsByCoAuthors[authorName] = {}
           }
           if (!publicationsByCoAuthors[authorName][year]) {
-            publicationsByCoAuthors[authorName][year] = [];
+            publicationsByCoAuthors[authorName][year] = []
           }
-          publicationsByCoAuthors[authorName][year].push(publication);
+          publicationsByCoAuthors[authorName][year].push(publication)
 
           if (!coAuthorsByYear[year]) {
-            coAuthorsByYear[year] = new Set();
+            coAuthorsByYear[year] = new Set()
           }
-          coAuthorsByYear[year].add(authorName);
-        });
+          coAuthorsByYear[year].add(authorName)
+        })
       }
-    });
+    })
 
     // Define helper functions for categorization
     const isCloseColleague = (coAuthor, year) => {
-      const years = Object.keys(publicationsByCoAuthors[coAuthor]).map(Number);
-      return years.filter(y => y >= year - 3 && y <= year).length >= 3;
+      const years = Object.keys(publicationsByCoAuthors[coAuthor]).map(Number)
+      return years.filter(y => y >= year - closeColleagueParameter && y <= year).length >= closeColleagueParameter
     }
 
     const isAcquaintance = (coAuthor, year) => {
-      const years = Object.keys(publicationsByCoAuthors[coAuthor]).map(Number);
-      let count = 0;
-      for (let y = year - 4; y <= year; y++) {
+      const years = Object.keys(publicationsByCoAuthors[coAuthor]).map(Number)
+      let count = 0
+      for (let y = year - acquaintanceParameter; y <= year; y++) {
         if (years.includes(y)) {
-          count++;
-          if (count >= 3) return true;
+          count++
+          if (count >= (acquaintanceParameter - 1)) return true
         }
       }
-      return false;
+      return false
     }
 
     const isCollaborator = (coAuthor, year) => {
-      const years = Object.keys(publicationsByCoAuthors[coAuthor]).map(Number);
-      return Math.min(...years) === parseInt(year);
+      const years = Object.keys(publicationsByCoAuthors[coAuthor]).map(Number)
+      return Math.min(...years) === parseInt(year)
     }
 
     // Categorize each co-author for each year
-    const categorizedCoAuthors = {};
+    const categorizedCoAuthors = {}
     Object.keys(coAuthorsByYear).forEach(year => {
-      categorizedCoAuthors[year] = { closeColleague: 0, acquaintance: 0, collaborator: 0 };
+      categorizedCoAuthors[year] = { closeColleague: 0, acquaintance: 0, collaborator: 0 }
       coAuthorsByYear[year].forEach(coAuthor => {
         if (isCloseColleague(coAuthor, year)) {
-          categorizedCoAuthors[year].closeColleague++;
+          categorizedCoAuthors[year].closeColleague++
         } else if (isAcquaintance(coAuthor, year)) {
-          categorizedCoAuthors[year].acquaintance++;
+          categorizedCoAuthors[year].acquaintance++
         } else if (isCollaborator(coAuthor, year)) {
-          categorizedCoAuthors[year].collaborator++;
+          categorizedCoAuthors[year].collaborator++
         }
-      });
-    });
+      })
+    })
 
-    return categorizedCoAuthors;
+    return categorizedCoAuthors
   }
 
   // Function to create and save the chart
Index: app/scripts/background.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>console.log('loaded background')\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/scripts/background.js b/app/scripts/background.js
--- a/app/scripts/background.js	(revision 6b4dcce0a4b6d83e253bfbc9d644441861c86f9c)
+++ b/app/scripts/background.js	(date 1700127072852)
@@ -1,1 +1,12 @@
-console.log('loaded background')
+import ParametersManager from './background/ParametersManager'
+
+class Background {
+  init () {
+    // Initialize LLM manager
+    this.parametersManager = new ParametersManager()
+    this.parametersManager.init()
+  }
+}
+
+const background = new Background()
+background.init()
Index: app/scripts/options.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/scripts/options.js b/app/scripts/options.js
new file mode 100644
--- /dev/null	(date 1695304557278)
+++ b/app/scripts/options.js	(date 1695304557278)
@@ -0,0 +1,9 @@
+// Enable chromereload by uncommenting this line:
+// import 'chromereload/devonly'
+
+import Options from './options/Options'
+
+window.addEventListener('load', (event) => {
+  window.options = new Options()
+  window.options.init()
+})
Index: app/scripts/options/Options.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/scripts/options/Options.js b/app/scripts/options/Options.js
new file mode 100644
--- /dev/null	(date 1700131544686)
+++ b/app/scripts/options/Options.js	(date 1700131544686)
@@ -0,0 +1,126 @@
+class Options {
+  init () {
+    document.querySelector('#numberOfAuthorsParameterButton').addEventListener('click', () => {
+      let currentValue = document.querySelector('#numberOfAuthorsParameterInput').value
+      let messageLabel = document.querySelector('#numberOfAuthorsParameterMessage')
+      if (this.checkNumberOfAuthorsParameter(currentValue)) {
+        this.setNumberOfAuthorsParameter(currentValue, messageLabel)
+      } else {
+        messageLabel.innerHTML = 'Invalid parameter'
+      }
+    })
+
+    document.querySelector('#closeColleagueParameterButton').addEventListener('click', () => {
+      let currentValue = document.querySelector('#closeColleagueParameterInput').value
+      let messageLabel = document.querySelector('#closeColleagueParameterMessage')
+      if (this.checkCloseColleagueParameter(currentValue)) {
+        this.setCloseColleagueParameter(currentValue, messageLabel)
+      } else {
+        messageLabel.innerHTML = 'Invalid parameter'
+      }
+    })
+
+    // Add event listener for AcquaintanceParameter
+    document.querySelector('#acquaintanceParameterButton').addEventListener('click', () => {
+      let currentValue = document.querySelector('#acquaintanceParameterInput').value
+      let messageLabel = document.querySelector('#acquaintanceParameterMessage')
+      if (this.checkAcquaintanceParameter(currentValue)) {
+        this.setAcquaintanceParameter(currentValue, messageLabel)
+      } else {
+        messageLabel.innerHTML = 'Invalid parameter'
+      }
+    })
+
+    chrome.runtime.sendMessage({ scope: 'parameterManager', cmd: 'getNumberOfAuthorsParameter' }, ({ parameter }) => {
+      if (parameter && parameter !== '') {
+        document.querySelector('#numberOfAuthorsParameterInput').value = parameter
+      } else {
+        document.querySelector('#numberOfAuthorsParameterInput').value = 3
+        this.setNumberOfAuthorsParameter(3)
+      }
+    })
+
+    chrome.runtime.sendMessage({ scope: 'parameterManager', cmd: 'getCloseColleagueParameter' }, ({ parameter }) => {
+      if (parameter && parameter !== '') {
+        document.querySelector('#closeColleagueParameterInput').value = parameter
+      } else {
+        document.querySelector('#closeColleagueParameterInput').value = 3
+        this.setCloseColleagueParameter(3)
+      }
+    })
+
+    chrome.runtime.sendMessage({ scope: 'parameterManager', cmd: 'getAcquaintanceParameter' }, ({ parameter }) => {
+      if (parameter && parameter !== '') {
+        document.querySelector('#acquaintanceParameterInput').value = parameter
+      } else {
+        document.querySelector('#acquaintanceParameterInput').value = 4
+        this.setAcquaintanceParameter(4)
+      }
+    })
+  }
+
+  setNumberOfAuthorsParameter (numberOfAuthorsParameter, messageLabel) {
+    chrome.runtime.sendMessage({
+      scope: 'parameterManager',
+      cmd: 'setNumberOfAuthorsParameter',
+      data: {numberOfAuthorsParameter: numberOfAuthorsParameter}
+    }, ({numberOfAuthorsParameter}) => {
+      console.debug('setNumberOfAuthorsParameter ' + numberOfAuthorsParameter)
+      if (messageLabel) {
+        messageLabel.innerHTML = 'Value saved'
+      }
+    })
+  }
+
+  setCloseColleagueParameter (closeColleagueParameter, messageLabel) {
+    chrome.runtime.sendMessage({
+      scope: 'parameterManager',
+      cmd: 'setCloseColleagueParameter',
+      data: {closeColleagueParameter: closeColleagueParameter}
+    }, ({closeColleagueParameter}) => {
+      console.debug('setCloseColleagueParameter ' + closeColleagueParameter)
+      if (messageLabel) {
+        messageLabel.innerHTML = 'Value saved'
+      }
+    })
+  }
+
+  setAcquaintanceParameter (acquaintanceParameter, messageLabel) {
+    chrome.runtime.sendMessage({
+      scope: 'parameterManager',
+      cmd: 'setAcquaintanceParameter',
+      data: {acquaintanceParameter: acquaintanceParameter}
+    }, ({acquaintanceParameter}) => {
+      console.debug('setAcquaintanceParameter ' + acquaintanceParameter)
+      if (messageLabel) {
+        messageLabel.innerHTML = 'Value saved'
+      }
+    })
+  }
+
+  checkNumberOfAuthorsParameter (parameter) {
+    if (parameter <= 10) {
+      return true
+    } else {
+      return false
+    }
+  }
+
+  checkCloseColleagueParameter (parameter) {
+    if (parameter <= 10) {
+      return true
+    } else {
+      return false
+    }
+  }
+
+  checkAcquaintanceParameter (parameter) {
+    if (parameter <= 10) {
+      return true
+    } else {
+      return false
+    }
+  }
+}
+
+export default Options
Index: app/scripts/contentScript.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import AuthorPositionChart from './charts/AuthorPositionChart.js'\nimport AuthorCount from './charts/AuthorCount.js'\nimport AuthorCollaborations from './charts/AuthorCollaborations.js'\n\nconst loadPage = function () {\n  console.log('page loaded')\n  let author = document.getElementById('headline')\n  console.log('author: ' + author.dataset.name)\n  if (!window.dblpExtension) {\n    window.dblpExtension = {}\n  }\n  let url = window.location.href\n  const updatedURL = url.replace(/\\.html$/, '.xml')\n  fetch(updatedURL)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`)\n      }\n      return response.text()\n    })\n    .then(xmlData => {\n      // Handle the XML data here\n      const parser = new DOMParser()\n      let xmlDoc = parser.parseFromString(xmlData, 'application/xml')\n      window.dblpExtension.authorCollaborations = new AuthorCollaborations()\n      window.dblpExtension.authorCollaborations.init(xmlDoc)\n      window.dblpExtension.authorCount = new AuthorCount()\n      window.dblpExtension.authorCount.init(xmlDoc)\n      window.dblpExtension.authorPositionChart = new AuthorPositionChart()\n      window.dblpExtension.authorPositionChart.init(xmlDoc)\n    })\n    .catch(error => {\n      console.error('Error:', error)\n    })\n}\n\n/* Main function to handle the flow\nasync function loadChart (xmlDoc) {\n  // Replace with the path to your XML file\n  try {\n    const result = xmlDoc\n    const publications = result.querySelectorAll('dblpperson > r')\n    const specificAuthor = result.querySelector('dblpperson > person > author').textContent\n    const yearCounts = countPublicationsByAuthorPosition(publications || [], specificAuthor)\n    await createChart(yearCounts)\n  } catch (error) {\n    console.error('An error occurred:', error)\n  }\n}\n\nfunction countPublicationsByAuthorPosition (publications, specificAuthor) {\n  const authorPositionCounts = {\n    firstAuthor: {},\n    secondAuthor: {},\n    moreThanThirdAuthor: {}\n  }\n\n  Array.from(publications).forEach(publication => {\n    let authors = Array.from(publication.children[0].children).filter(element => element.tagName === 'author')\n    // Ensure that authors is always an array\n    if (!Array.isArray(authors)) {\n      authors = [authors] // Wrap the object in an array\n    }\n    let year = Array.from(publication.children[0].children).find(element => element.tagName === 'year')\n    if (year) {\n      year = year.innerHTML\n      // Find the position of the specific author\n      const authorPosition = authors.findIndex(author => author.lastChild.data === specificAuthor || author.innerHTML === specificAuthor) + 1 // Adjust for 0-based index\n      // Categorize by author position\n      if (authorPosition === 1) {\n        authorPositionCounts.firstAuthor[year] = (authorPositionCounts.firstAuthor[year] || 0) + 1\n      } else if (authorPosition === 2) {\n        authorPositionCounts.secondAuthor[year] = (authorPositionCounts.secondAuthor[year] || 0) + 1\n      } else if (authorPosition > 2) {\n        authorPositionCounts.moreThanThirdAuthor[year] = (authorPositionCounts.moreThanThirdAuthor[year] || 0) + 1\n      }\n    }\n  })\n\n  return authorPositionCounts\n}\n\n// Function to create and save the chart\nasync function createChart (authorPositionCounts) {\n  const sortedYears = Object.keys({\n    ...authorPositionCounts.firstAuthor,\n    ...authorPositionCounts.secondAuthor,\n    ...authorPositionCounts.moreThanThirdAuthor\n  }).sort((a, b) => a - b)\n  const datasets = [\n    {\n      label: 'First Author',\n      data: sortedYears.map(year => authorPositionCounts.firstAuthor[year] || 0),\n      backgroundColor: 'rgba(255, 99, 132)',\n      stack: 'stacked' // This indicates that the bar should be stacked\n    },\n    {\n      label: 'Second Author',\n      data: sortedYears.map(year => authorPositionCounts.secondAuthor[year] || 0),\n      backgroundColor: 'rgba(54, 162, 235)',\n      stack: 'stacked' // This indicates that the bar should be stacked\n    },\n    {\n      label: 'More Than Third Author',\n      data: sortedYears.map(year => authorPositionCounts.moreThanThirdAuthor[year] || 0),\n      backgroundColor: 'rgba(255, 206, 86)',\n      stack: 'stacked' // This indicates that the bar should be stacked\n    }\n  ]\n\n  configuration = {\n    type: 'bar',\n    data: {\n      labels: sortedYears,\n      datasets: datasets\n    },\n    options: {\n      scales: {\n        x: {\n          stacked: true\n        },\n        y: {\n          stacked: true,\n          beginAtZero: true,\n          ticks: {\n            stepSize: 1\n          }\n        }\n      },\n      plugins: {\n        legend: {\n          display: true,\n          align: 'start'\n        }\n      }\n    }\n  }\n\n  // Create normal canvas element\n  const normalCanvas = document.createElement('canvas')\n  normalCanvas.id = 'myChart'\n  normalCanvas.width = 800\n  normalCanvas.height = 600\n\n  // Create large canvas element\n  const largeCanvas = document.createElement('canvas')\n  largeCanvas.id = 'myLargeChart'\n  largeCanvas.width = 1100 // Example large size, adjust as needed\n  largeCanvas.height = 700 // Example large size, adjust as needed\n\n  // Ensure this event handler is added in the createChart function after creating the chart instance\n  normalCanvas.addEventListener('click', function () {\n    toggleChartModal(normalCanvas, largeCanvas, authorPositionCounts, true) // Pass the chart instance to the toggle function\n  })\n\n  // Append normal canvas to the page\n  let div = document.getElementById('authorpage-refine')\n  div.insertBefore(normalCanvas, div.firstChild)\n\n  // Get the context of the normal canvas and create the chart\n  const normalCtx = normalCanvas.getContext('2d')\n  myChart = new Chart(normalCtx, configuration)\n}\n\nfunction toggleChartModal (normalCanvas, largeCanvas, authorPositionCounts, enlarge) {\n  let backdrop = document.querySelector('.modal-backdrop')\n  if (!backdrop) {\n    backdrop = document.createElement('div')\n    backdrop.classList.add('modal-backdrop')\n    backdrop.style.display = 'none' // Initially hidden\n    document.body.appendChild(backdrop)\n  }\n\n  if (enlarge) {\n    // Apply modal-specific styles\n    largeCanvas.classList.add('modal-canvas', 'modal-view')\n\n    // Always remove the old chart and create a new one for consistency\n    if (myLargeChart) {\n      myLargeChart.destroy() // Destroy the old chart instance\n    }\n    // Get the context of the large canvas\n    const largeCtx = largeCanvas.getContext('2d')\n    // Clone the chart configuration and adjust as needed for the larger size\n    let largeConfiguration = JSON.parse(JSON.stringify(configuration))\n    largeConfiguration.options.maintainAspectRatio = false\n    // Adjust other configuration options as needed\n    largeConfiguration.options.scales.x.ticks.autoSkip = false\n    largeConfiguration.options.scales.x.ticks.maxRotation = 90\n\n    myLargeChart = new Chart(largeCtx, largeConfiguration) // Create a new chart instance\n\n    backdrop.appendChild(largeCanvas)\n    backdrop.style.display = 'flex'\n    normalCanvas.style.display = 'none' // Hide the normal canvas\n\n    backdrop.onclick = function () {\n      toggleChartModal(normalCanvas, largeCanvas, authorPositionCounts, false)\n    }\n  } else {\n    // Remove modal-specific styles\n    largeCanvas.classList.remove('modal-canvas', 'modal-view')\n\n    // Move the normal canvas back into the main page and hide the modal\n    backdrop.removeChild(largeCanvas)\n    backdrop.style.display = 'none'\n    normalCanvas.style.display = 'block' // Show the normal canvas\n\n    // If needed, update the normal chart instance\n    myChart.update()\n  }\n} */\n\nwindow.onload = loadPage\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/scripts/contentScript.js b/app/scripts/contentScript.js
--- a/app/scripts/contentScript.js	(revision 6b4dcce0a4b6d83e253bfbc9d644441861c86f9c)
+++ b/app/scripts/contentScript.js	(date 1700130880007)
@@ -22,193 +22,41 @@
       // Handle the XML data here
       const parser = new DOMParser()
       let xmlDoc = parser.parseFromString(xmlData, 'application/xml')
-      window.dblpExtension.authorCollaborations = new AuthorCollaborations()
-      window.dblpExtension.authorCollaborations.init(xmlDoc)
-      window.dblpExtension.authorCount = new AuthorCount()
-      window.dblpExtension.authorCount.init(xmlDoc)
-      window.dblpExtension.authorPositionChart = new AuthorPositionChart()
-      window.dblpExtension.authorPositionChart.init(xmlDoc)
+
+      chrome.runtime.sendMessage({ scope: 'parameterManager', cmd: 'getCloseColleagueParameter' }, ({ parameter }) => {
+        let closeColleagueParameter
+        if (parameter && parameter !== '') {
+          closeColleagueParameter = parameter
+        } else {
+          closeColleagueParameter = 3
+        }
+        chrome.runtime.sendMessage({ scope: 'parameterManager', cmd: 'getAcquaintanceParameter' }, ({ parameter }) => {
+          let acquaintanceParameter
+          if (parameter && parameter !== '') {
+            acquaintanceParameter = parameter
+          } else {
+            acquaintanceParameter = 3
+          }
+          window.dblpExtension.authorCollaborations = new AuthorCollaborations()
+          window.dblpExtension.authorCollaborations.init(xmlDoc, closeColleagueParameter, acquaintanceParameter)
+          chrome.runtime.sendMessage({ scope: 'parameterManager', cmd: 'getNumberOfAuthorsParameter' }, ({ parameter }) => {
+            let numberOfAuthorsParameter
+            if (parameter && parameter !== '') {
+              numberOfAuthorsParameter = parameter
+            } else {
+              numberOfAuthorsParameter = 3
+            }
+            window.dblpExtension.authorCount = new AuthorCount()
+            window.dblpExtension.authorCount.init(xmlDoc, numberOfAuthorsParameter)
+            window.dblpExtension.authorPositionChart = new AuthorPositionChart()
+            window.dblpExtension.authorPositionChart.init(xmlDoc)
+          })
+        })
+      })
     })
     .catch(error => {
       console.error('Error:', error)
     })
 }
 
-/* Main function to handle the flow
-async function loadChart (xmlDoc) {
-  // Replace with the path to your XML file
-  try {
-    const result = xmlDoc
-    const publications = result.querySelectorAll('dblpperson > r')
-    const specificAuthor = result.querySelector('dblpperson > person > author').textContent
-    const yearCounts = countPublicationsByAuthorPosition(publications || [], specificAuthor)
-    await createChart(yearCounts)
-  } catch (error) {
-    console.error('An error occurred:', error)
-  }
-}
-
-function countPublicationsByAuthorPosition (publications, specificAuthor) {
-  const authorPositionCounts = {
-    firstAuthor: {},
-    secondAuthor: {},
-    moreThanThirdAuthor: {}
-  }
-
-  Array.from(publications).forEach(publication => {
-    let authors = Array.from(publication.children[0].children).filter(element => element.tagName === 'author')
-    // Ensure that authors is always an array
-    if (!Array.isArray(authors)) {
-      authors = [authors] // Wrap the object in an array
-    }
-    let year = Array.from(publication.children[0].children).find(element => element.tagName === 'year')
-    if (year) {
-      year = year.innerHTML
-      // Find the position of the specific author
-      const authorPosition = authors.findIndex(author => author.lastChild.data === specificAuthor || author.innerHTML === specificAuthor) + 1 // Adjust for 0-based index
-      // Categorize by author position
-      if (authorPosition === 1) {
-        authorPositionCounts.firstAuthor[year] = (authorPositionCounts.firstAuthor[year] || 0) + 1
-      } else if (authorPosition === 2) {
-        authorPositionCounts.secondAuthor[year] = (authorPositionCounts.secondAuthor[year] || 0) + 1
-      } else if (authorPosition > 2) {
-        authorPositionCounts.moreThanThirdAuthor[year] = (authorPositionCounts.moreThanThirdAuthor[year] || 0) + 1
-      }
-    }
-  })
-
-  return authorPositionCounts
-}
-
-// Function to create and save the chart
-async function createChart (authorPositionCounts) {
-  const sortedYears = Object.keys({
-    ...authorPositionCounts.firstAuthor,
-    ...authorPositionCounts.secondAuthor,
-    ...authorPositionCounts.moreThanThirdAuthor
-  }).sort((a, b) => a - b)
-  const datasets = [
-    {
-      label: 'First Author',
-      data: sortedYears.map(year => authorPositionCounts.firstAuthor[year] || 0),
-      backgroundColor: 'rgba(255, 99, 132)',
-      stack: 'stacked' // This indicates that the bar should be stacked
-    },
-    {
-      label: 'Second Author',
-      data: sortedYears.map(year => authorPositionCounts.secondAuthor[year] || 0),
-      backgroundColor: 'rgba(54, 162, 235)',
-      stack: 'stacked' // This indicates that the bar should be stacked
-    },
-    {
-      label: 'More Than Third Author',
-      data: sortedYears.map(year => authorPositionCounts.moreThanThirdAuthor[year] || 0),
-      backgroundColor: 'rgba(255, 206, 86)',
-      stack: 'stacked' // This indicates that the bar should be stacked
-    }
-  ]
-
-  configuration = {
-    type: 'bar',
-    data: {
-      labels: sortedYears,
-      datasets: datasets
-    },
-    options: {
-      scales: {
-        x: {
-          stacked: true
-        },
-        y: {
-          stacked: true,
-          beginAtZero: true,
-          ticks: {
-            stepSize: 1
-          }
-        }
-      },
-      plugins: {
-        legend: {
-          display: true,
-          align: 'start'
-        }
-      }
-    }
-  }
-
-  // Create normal canvas element
-  const normalCanvas = document.createElement('canvas')
-  normalCanvas.id = 'myChart'
-  normalCanvas.width = 800
-  normalCanvas.height = 600
-
-  // Create large canvas element
-  const largeCanvas = document.createElement('canvas')
-  largeCanvas.id = 'myLargeChart'
-  largeCanvas.width = 1100 // Example large size, adjust as needed
-  largeCanvas.height = 700 // Example large size, adjust as needed
-
-  // Ensure this event handler is added in the createChart function after creating the chart instance
-  normalCanvas.addEventListener('click', function () {
-    toggleChartModal(normalCanvas, largeCanvas, authorPositionCounts, true) // Pass the chart instance to the toggle function
-  })
-
-  // Append normal canvas to the page
-  let div = document.getElementById('authorpage-refine')
-  div.insertBefore(normalCanvas, div.firstChild)
-
-  // Get the context of the normal canvas and create the chart
-  const normalCtx = normalCanvas.getContext('2d')
-  myChart = new Chart(normalCtx, configuration)
-}
-
-function toggleChartModal (normalCanvas, largeCanvas, authorPositionCounts, enlarge) {
-  let backdrop = document.querySelector('.modal-backdrop')
-  if (!backdrop) {
-    backdrop = document.createElement('div')
-    backdrop.classList.add('modal-backdrop')
-    backdrop.style.display = 'none' // Initially hidden
-    document.body.appendChild(backdrop)
-  }
-
-  if (enlarge) {
-    // Apply modal-specific styles
-    largeCanvas.classList.add('modal-canvas', 'modal-view')
-
-    // Always remove the old chart and create a new one for consistency
-    if (myLargeChart) {
-      myLargeChart.destroy() // Destroy the old chart instance
-    }
-    // Get the context of the large canvas
-    const largeCtx = largeCanvas.getContext('2d')
-    // Clone the chart configuration and adjust as needed for the larger size
-    let largeConfiguration = JSON.parse(JSON.stringify(configuration))
-    largeConfiguration.options.maintainAspectRatio = false
-    // Adjust other configuration options as needed
-    largeConfiguration.options.scales.x.ticks.autoSkip = false
-    largeConfiguration.options.scales.x.ticks.maxRotation = 90
-
-    myLargeChart = new Chart(largeCtx, largeConfiguration) // Create a new chart instance
-
-    backdrop.appendChild(largeCanvas)
-    backdrop.style.display = 'flex'
-    normalCanvas.style.display = 'none' // Hide the normal canvas
-
-    backdrop.onclick = function () {
-      toggleChartModal(normalCanvas, largeCanvas, authorPositionCounts, false)
-    }
-  } else {
-    // Remove modal-specific styles
-    largeCanvas.classList.remove('modal-canvas', 'modal-view')
-
-    // Move the normal canvas back into the main page and hide the modal
-    backdrop.removeChild(largeCanvas)
-    backdrop.style.display = 'none'
-    normalCanvas.style.display = 'block' // Show the normal canvas
-
-    // If needed, update the normal chart instance
-    myChart.update()
-  }
-} */
-
 window.onload = loadPage
Index: app/scripts/utils/ChromeStorage.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/scripts/utils/ChromeStorage.js b/app/scripts/utils/ChromeStorage.js
new file mode 100644
--- /dev/null	(date 1695304557282)
+++ b/app/scripts/utils/ChromeStorage.js	(date 1695304557282)
@@ -0,0 +1,46 @@
+'use strict'
+
+const _ = require('lodash')
+
+class ChromeStorage {
+  /**
+   * Stores data on chrome storage (local or sync) given a namespace or ID
+   * @param namespace A String which identify the space to store the data
+   * @param data The data to save
+   * @param storageArea The area to save the data (local or sync)
+   * @param callback The function to execute after saving the data
+   * @throws Error if it was unable to storage data
+   */
+  static setData (namespace, data, storageArea, callback) {
+    // Create to be saved object
+    let obj = {}
+    obj[namespace] = data
+    storageArea.set(obj, (result) => {
+      console.log(result)
+      // Execute callback and return error if happened
+      if (_.isFunction(callback)) {
+        callback(chrome.runtime.lastError)
+      }
+    })
+  }
+
+  /**
+   * Retrieve data from chrome storage given a namespace or ID
+   * @param namespace A String which identify the space to store the data
+   * @param storageArea The area to save the data (local or sync)
+   * @param callback The function to execute after saving the data
+   */
+  static getData (namespace, storageArea, callback) {
+    storageArea.get(namespace, function (items) {
+      // Execute callback and return error if happened and the data required
+      if (_.isFunction(callback)) {
+        callback(chrome.runtime.lastError, items[namespace])
+      }
+    })
+  }
+}
+
+ChromeStorage.local = chrome.storage.local
+ChromeStorage.sync = chrome.storage.sync
+
+module.exports = ChromeStorage
Index: app/scripts/background/ParametersManager.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/scripts/background/ParametersManager.js b/app/scripts/background/ParametersManager.js
new file mode 100644
--- /dev/null	(date 1700131535654)
+++ b/app/scripts/background/ParametersManager.js	(date 1700131535654)
@@ -0,0 +1,85 @@
+import ChromeStorage from '../utils/ChromeStorage'
+
+class ParametersManager {
+  init () {
+    // Initialize replier for requests related to storage
+    this.initRespondent()
+  }
+
+  initRespondent () {
+    chrome.runtime.onMessage.addListener((request, sender, sendResponse) => {
+      if (request.scope === 'parameterManager') {
+        if (request.cmd === 'getNumberOfAuthorsParameter') {
+          ChromeStorage.getData('parameters.numberOfAuthors', ChromeStorage.sync, (err, parameter) => {
+            if (err) {
+              sendResponse({ err: err })
+            } else {
+              if (parameter && parameter.data) {
+                parameter = JSON.parse(parameter.data)
+                sendResponse({ parameter: parameter || 3 })
+              } else {
+                sendResponse({ parameter: 3 })
+              }
+            }
+          })
+        } else if (request.cmd === 'setNumberOfAuthorsParameter') {
+          let numberOfAuthorsParameter = request.data.numberOfAuthorsParameter
+          ChromeStorage.setData('parameters.numberOfAuthors', { data: JSON.stringify(numberOfAuthorsParameter) }, ChromeStorage.sync, (err) => {
+            if (err) {
+              sendResponse({ err: err })
+            } else {
+              sendResponse({ parameter: numberOfAuthorsParameter })
+            }
+          })
+        } else if (request.cmd === 'getCloseColleagueParameter') {
+          ChromeStorage.getData('parameters.closeColleagueParameter', ChromeStorage.sync, (err, parameter) => {
+            if (err) {
+              sendResponse({ err: err })
+            } else {
+              if (parameter && parameter.data) {
+                parameter = JSON.parse(parameter.data)
+                sendResponse({ parameter: parameter || 3 })
+              } else {
+                sendResponse({ parameter: 3 })
+              }
+            }
+          })
+        } else if (request.cmd === 'setCloseColleagueParameter') {
+          let closeColleagueParameter = request.data.closeColleagueParameter
+          ChromeStorage.setData('parameters.closeColleagueParameter', { data: JSON.stringify(closeColleagueParameter) }, ChromeStorage.sync, (err) => {
+            if (err) {
+              sendResponse({ err: err })
+            } else {
+              sendResponse({ parameter: closeColleagueParameter })
+            }
+          })
+        } else if (request.cmd === 'getAcquaintanceParameter') {
+          ChromeStorage.getData('parameters.acquaintanceParameter', ChromeStorage.sync, (err, parameter) => {
+            if (err) {
+              sendResponse({ err: err })
+            } else {
+              if (parameter && parameter.data) {
+                parameter = JSON.parse(parameter.data)
+                sendResponse({ parameter: parameter || 4 })
+              } else {
+                sendResponse({ parameter: 4 })
+              }
+            }
+          })
+        } else if (request.cmd === 'setAcquaintanceParameter') {
+          let acquaintanceParameter = request.data.acquaintanceParameter
+          ChromeStorage.setData('parameters.acquaintanceParameter', { data: JSON.stringify(acquaintanceParameter) }, ChromeStorage.sync, (err) => {
+            if (err) {
+              sendResponse({ err: err })
+            } else {
+              sendResponse({ parameter: acquaintanceParameter })
+            }
+          })
+        }
+        return true
+      }
+    })
+  }
+}
+
+export default ParametersManager
Index: app/scripts/charts/AuthorCount.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import Chart from 'chart.js/auto'\n\nclass AuthorCount {\n  constructor () {\n    this.myChart = null\n    this.myLargeChart = null\n    this.configuration = null\n  }\n\n  async init (xmlDoc) {\n    try {\n      const result = xmlDoc\n      const publications = result.querySelectorAll('dblpperson > r')\n      const yearCounts = this.countPublicationsByAuthorCount(publications)\n      await this.createChart(yearCounts)\n    } catch (error) {\n      console.error('An error occurred:', error)\n    }\n  }\n\n  countPublicationsByAuthorCount (publications) {\n    const authorCountCategories = {\n      threeOrLessAuthors: {},\n      moreThanThreeAuthors: {}\n    }\n\n    Array.from(publications).forEach(publication => {\n      let authors = Array.from(publication.children[0].children).filter(element => element.tagName === 'author')\n      let year = Array.from(publication.children[0].children).find(element => element.tagName === 'year').innerHTML\n\n      // Categorize by number of authors\n      if (authors.length <= 3) {\n        authorCountCategories.threeOrLessAuthors[year] = (authorCountCategories.threeOrLessAuthors[year] || 0) + 1\n      } else {\n        authorCountCategories.moreThanThreeAuthors[year] = (authorCountCategories.moreThanThreeAuthors[year] || 0) + 1\n      }\n    })\n\n    return authorCountCategories\n  }\n\n  // Function to create and save the chart\n  async createChart (authorCountCategories) {\n    const sortedYears = Object.keys({\n      ...authorCountCategories.threeOrLessAuthors,\n      ...authorCountCategories.moreThanThreeAuthors\n    }).sort((a, b) => a - b)\n\n    const datasets = [\n      {\n        label: '3 or Fewer Authors',\n        data: sortedYears.map(year => authorCountCategories.threeOrLessAuthors[year] || 0),\n        backgroundColor: 'rgba(75, 192, 192)', // Color for the '3 or Fewer Authors' category\n        stack: 'stacked'\n      },\n      {\n        label: 'More Than 3 Authors',\n        data: sortedYears.map(year => authorCountCategories.moreThanThreeAuthors[year] || 0),\n        backgroundColor: 'rgba(153, 102, 255)', // Color for the 'More Than 3 Authors' category\n        stack: 'stacked'\n      }\n    ]\n\n    this.configuration = {\n      type: 'bar',\n      data: {\n        labels: sortedYears,\n        datasets: datasets\n      },\n      options: {\n        scales: {\n          x: {\n            stacked: true\n          },\n          y: {\n            stacked: true,\n            beginAtZero: true,\n            ticks: {\n              stepSize: 1\n            }\n          }\n        },\n        plugins: {\n          legend: {\n            display: true,\n            align: 'start'\n          }\n        }\n      }\n    }\n\n    // Create normal canvas element\n    const normalCanvas = document.createElement('canvas')\n    normalCanvas.id = 'myChart'\n    normalCanvas.width = 800\n    normalCanvas.height = 600\n\n    // Create large canvas element\n    const largeCanvas = document.createElement('canvas')\n    largeCanvas.id = 'myLargeChart'\n    largeCanvas.width = 1100 // Example large size, adjust as needed\n    largeCanvas.height = 700 // Example large size, adjust as needed\n\n    // Ensure this event handler is added in the createChart function after creating the chart instance\n    normalCanvas.addEventListener('click', () => {\n      this.toggleChartModal(normalCanvas, largeCanvas, authorCountCategories, true) // Use an arrow function here\n    })\n\n    // Append normal canvas to the page\n    let div = document.getElementById('authorpage-refine')\n    let title = document.createElement('p')\n    let text = document.createElement('b')\n    text.innerHTML = 'Number of Authors'\n    title.appendChild(text)\n    div.insertBefore(normalCanvas, div.firstChild)\n    div.insertBefore(title, normalCanvas)\n\n    // Get the context of the normal canvas and create the chart\n    const normalCtx = normalCanvas.getContext('2d')\n    this.myChart = new Chart(normalCtx, this.configuration)\n  }\n\n  toggleChartModal (normalCanvas, largeCanvas, authorCountCategories, enlarge) {\n    let backdrop = document.querySelector('.modal-backdrop')\n    if (!backdrop) {\n      backdrop = document.createElement('div')\n      backdrop.classList.add('modal-backdrop')\n      backdrop.style.display = 'none' // Initially hidden\n      document.body.appendChild(backdrop)\n    }\n\n    if (enlarge) {\n      // Apply modal-specific styles\n      largeCanvas.classList.add('modal-canvas', 'modal-view')\n\n      // Always remove the old chart and create a new one for consistency\n      if (this.myLargeChart) {\n        this.myLargeChart.destroy() // Destroy the old chart instance\n      }\n      // Get the context of the large canvas\n      const largeCtx = largeCanvas.getContext('2d')\n      // Clone the chart configuration and adjust as needed for the larger size\n      let largeConfiguration = JSON.parse(JSON.stringify(this.configuration))\n      largeConfiguration.options.maintainAspectRatio = false\n      // Adjust other configuration options as needed\n      largeConfiguration.options.scales.x.ticks.autoSkip = false\n      largeConfiguration.options.scales.x.ticks.maxRotation = 90\n\n      this.myLargeChart = new Chart(largeCtx, largeConfiguration) // Create a new chart instance\n\n      backdrop.appendChild(largeCanvas)\n      backdrop.style.display = 'flex'\n      normalCanvas.style.display = 'none' // Hide the normal canvas\n\n      backdrop.onclick = () => {\n        this.toggleChartModal(normalCanvas, largeCanvas, authorCountCategories, false)\n      }\n    } else {\n      // Remove modal-specific styles\n      largeCanvas.classList.remove('modal-canvas', 'modal-view')\n\n      // Move the normal canvas back into the main page and hide the modal\n      backdrop.removeChild(largeCanvas)\n      backdrop.style.display = 'none'\n      normalCanvas.style.display = 'block' // Show the normal canvas\n\n      // If needed, update the normal chart instance\n      this.myChart.update()\n    }\n  }\n}\n\nexport default AuthorCount\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/scripts/charts/AuthorCount.js b/app/scripts/charts/AuthorCount.js
--- a/app/scripts/charts/AuthorCount.js	(revision 6b4dcce0a4b6d83e253bfbc9d644441861c86f9c)
+++ b/app/scripts/charts/AuthorCount.js	(date 1700131097643)
@@ -7,18 +7,18 @@
     this.configuration = null
   }
 
-  async init (xmlDoc) {
+  async init (xmlDoc, numberOfAuthorsParameter) {
     try {
       const result = xmlDoc
       const publications = result.querySelectorAll('dblpperson > r')
-      const yearCounts = this.countPublicationsByAuthorCount(publications)
-      await this.createChart(yearCounts)
+      const yearCounts = this.countPublicationsByAuthorCount(publications, numberOfAuthorsParameter)
+      await this.createChart(yearCounts, numberOfAuthorsParameter)
     } catch (error) {
       console.error('An error occurred:', error)
     }
   }
 
-  countPublicationsByAuthorCount (publications) {
+  countPublicationsByAuthorCount (publications, numberOfAuthorsParameter) {
     const authorCountCategories = {
       threeOrLessAuthors: {},
       moreThanThreeAuthors: {}
@@ -29,18 +29,17 @@
       let year = Array.from(publication.children[0].children).find(element => element.tagName === 'year').innerHTML
 
       // Categorize by number of authors
-      if (authors.length <= 3) {
+      if (authors.length <= numberOfAuthorsParameter) {
         authorCountCategories.threeOrLessAuthors[year] = (authorCountCategories.threeOrLessAuthors[year] || 0) + 1
       } else {
         authorCountCategories.moreThanThreeAuthors[year] = (authorCountCategories.moreThanThreeAuthors[year] || 0) + 1
       }
     })
-
     return authorCountCategories
   }
 
   // Function to create and save the chart
-  async createChart (authorCountCategories) {
+  async createChart (authorCountCategories, numberOfAuthorsParameter) {
     const sortedYears = Object.keys({
       ...authorCountCategories.threeOrLessAuthors,
       ...authorCountCategories.moreThanThreeAuthors
@@ -48,13 +47,13 @@
 
     const datasets = [
       {
-        label: '3 or Fewer Authors',
+        label: numberOfAuthorsParameter + ' or Fewer Authors',
         data: sortedYears.map(year => authorCountCategories.threeOrLessAuthors[year] || 0),
         backgroundColor: 'rgba(75, 192, 192)', // Color for the '3 or Fewer Authors' category
         stack: 'stacked'
       },
       {
-        label: 'More Than 3 Authors',
+        label: 'More Than ' + numberOfAuthorsParameter + ' Authors',
         data: sortedYears.map(year => authorCountCategories.moreThanThreeAuthors[year] || 0),
         backgroundColor: 'rgba(153, 102, 255)', // Color for the 'More Than 3 Authors' category
         stack: 'stacked'
Index: app/pages/options.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!doctype html>\n<html lang=\"en\">\n<head>\n  <!-- Required meta tags -->\n  <meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"../styles/options.css\">\n\n  <title>CoReviewer configuration</title>\n</head>\n<body>\n<div class=\"container\">\n  <!-- Header -->\n  <header></header>\n\n  <!-- Navigation bar -->\n\n  <!-- Container -->\n  <div id=\"main-container\" class=\"container\">\n\n    <div class=\"jumbotron\">\n      </br></br>\n      <img alt=\"Review and go logo\" title=\"Review and go logo\" class=\"logo\" src=\"../images/icon-38.png\">\n      <h2 class=\"title\">CoReviewer configuration</h2>\n      <div class=\"card\">\n        <div class=\"card-header card-header bg-dark text-white\">User manual</div>\n        <div class=\"card-body\">\n          <div class=\"form-group\">\n            Visit whenever you want the <a href=\"https://github.com/haritzmedina/reviewandgo/wiki\" target=\"_blank\">user manual</a> for further information or checkout the <a href=\"https://www.youtube.com/watch?v=iPC6YEr3qlo\">video</a>.\n          </div>\n        </div>\n      </div>\n      <div class=\"card\">\n        <div class=\"card-header card-header bg-dark text-white\">Large Language Model selection</div>\n        <div class=\"card-body\">\n          <div class=\"form-check\">\n            <label for=\"LLMDropdown\">Select your Large Language Model</label>\n            <select class=\"form-control\" id=\"LLMDropdown\">\n              <option value=\"anthropic\" selected=\"selected\">Anthropic</option>\n              <option value=\"openAI\">OpenAI</option>\n            </select>\n          </div>\n          <br>\n          <div id=\"anthropic-ApiKeyContainer\" class=\"APIKey-Configuration\">\n            <label>Paste here your Anthropic API key:</label>\n            <input type=\"text\" id=\"anthropic-APIKey\"/>\n            <button id=\"anthropic-APIKeyValidationButton\" class=\"APIKeyValidationButton\">Validate and save</button>\n          </div>\n          <div id=\"openAI-ApiKeyContainer\" class=\"APIKey-Configuration\">\n            <label>Paste here your OpenAI API key:</label>\n            <input type=\"text\" id=\"openAI-APIKey\" />\n            <button id=\"openAI-APIKeyValidationButton\" class=\"APIKeyValidationButton\">Validate and save</button>\n          </div>\n        </div >\n      </div>\n      <div class=\"card\">\n        <div class=\"card-header card-header bg-dark text-white\">Criterion assessment query</div>\n        <div class=\"card-body\">\n          <div id=\"QueryContainer\" class=\"Query-Configuration\">\n            <label>Configure your query here, consider that you have to include the criterion description with [C_DESCRIPTION] and the name with [C_NAME]:</label>\n            <div class=\"form-check\">\n            </br>\n            <textarea type=\"text\" id=\"criterionQuery\" rows=\"5\" cols=\"100\"></textarea>\n            </br></br>\n              <button id=\"defaultQueryButton\" class=\"saveQueryButtonClass btn btn-secondary\">Get default prompt</button>\n            <button id=\"saveQueryButton\" class=\"saveQueryButtonClass btn btn-secondary\">Validate and save</button>\n            <label id=\"criterionQueryMessage\"></label>\n          </div>\n          </div>\n        </div >\n      </div>\n      <div id=\"localStorageConfigurationCard\" class=\"card storageConfiguration\">\n        <div class=\"card-header bg-dark text-white\">Local storage</div>\n        <div class=\"card-body\">\n          <div class=\"form-check\">\n            <button class=\"btn btn-secondary\" id=\"restoreDatabaseButton\">Restore annotations</button>\n            <button class=\"btn btn-secondary\" id=\"backupDatabaseButton\">Backup annotations</button>\n            <button class=\"btn btn-secondary\" id=\"deleteDatabaseButton\">Delete annotations</button>\n          </div>\n        </div>\n      </div>\n      </div>\n    </div>\n  </div>\n</div>\n<script src=\"../scripts/options.js\"></script>\n</body>\n</html>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/pages/options.html b/app/pages/options.html
--- a/app/pages/options.html	(revision 6b4dcce0a4b6d83e253bfbc9d644441861c86f9c)
+++ b/app/pages/options.html	(date 1700126191959)
@@ -7,76 +7,54 @@
 
   <link rel="stylesheet" type="text/css" href="../styles/options.css">
 
-  <title>CoReviewer configuration</title>
+  <title>DBLP Extension configuration</title>
 </head>
 <body>
 <div class="container">
   <!-- Header -->
   <header></header>
 
-  <!-- Navigation bar -->
-
   <!-- Container -->
   <div id="main-container" class="container">
 
     <div class="jumbotron">
       </br></br>
-      <img alt="Review and go logo" title="Review and go logo" class="logo" src="../images/icon-38.png">
-      <h2 class="title">CoReviewer configuration</h2>
-      <div class="card">
+      <h2 class="title">DBLP Extension configuration</h2>
+      <!--div class="card">
         <div class="card-header card-header bg-dark text-white">User manual</div>
         <div class="card-body">
           <div class="form-group">
             Visit whenever you want the <a href="https://github.com/haritzmedina/reviewandgo/wiki" target="_blank">user manual</a> for further information or checkout the <a href="https://www.youtube.com/watch?v=iPC6YEr3qlo">video</a>.
           </div>
         </div>
-      </div>
+      </div-->
       <div class="card">
-        <div class="card-header card-header bg-dark text-white">Large Language Model selection</div>
+        <div class="card-header card-header bg-dark text-white">Number of Authors Chart Configuration</div>
         <div class="card-body">
           <div class="form-check">
-            <label for="LLMDropdown">Select your Large Language Model</label>
-            <select class="form-control" id="LLMDropdown">
-              <option value="anthropic" selected="selected">Anthropic</option>
-              <option value="openAI">OpenAI</option>
-            </select>
+            <label for="numberOfAuthorsParameterInput">What is the number of authors threshold=</label>
+            <input type="number" id="numberOfAuthorsParameterInput" min="2" max="10">
+            <button id="numberOfAuthorsParameterButton" >Save</button>
+            <label id="numberOfAuthorsParameterMessage"></label>
           </div>
           <br>
-          <div id="anthropic-ApiKeyContainer" class="APIKey-Configuration">
-            <label>Paste here your Anthropic API key:</label>
-            <input type="text" id="anthropic-APIKey"/>
-            <button id="anthropic-APIKeyValidationButton" class="APIKeyValidationButton">Validate and save</button>
-          </div>
-          <div id="openAI-ApiKeyContainer" class="APIKey-Configuration">
-            <label>Paste here your OpenAI API key:</label>
-            <input type="text" id="openAI-APIKey" />
-            <button id="openAI-APIKeyValidationButton" class="APIKeyValidationButton">Validate and save</button>
-          </div>
-        </div >
+        </div>
       </div>
       <div class="card">
-        <div class="card-header card-header bg-dark text-white">Criterion assessment query</div>
+        <div class="card-header card-header bg-dark text-white">CoAuthor categories Chart Configuration</div>
         <div class="card-body">
-          <div id="QueryContainer" class="Query-Configuration">
-            <label>Configure your query here, consider that you have to include the criterion description with [C_DESCRIPTION] and the name with [C_NAME]:</label>
-            <div class="form-check">
-            </br>
-            <textarea type="text" id="criterionQuery" rows="5" cols="100"></textarea>
-            </br></br>
-              <button id="defaultQueryButton" class="saveQueryButtonClass btn btn-secondary">Get default prompt</button>
-            <button id="saveQueryButton" class="saveQueryButtonClass btn btn-secondary">Validate and save</button>
-            <label id="criterionQueryMessage"></label>
-          </div>
+          <div class="form-check">
+            <label for="closeColleagueParameterInput">What is the threshold value to be an Close Colleague?</label>
+            <input type="number" id="closeColleagueParameterInput" min="2" max="10">
+            <button id="closeColleagueParameterButton" >Save</button>
+            <label id="closeColleagueParameterMessage"></label>
           </div>
-        </div >
-      </div>
-      <div id="localStorageConfigurationCard" class="card storageConfiguration">
-        <div class="card-header bg-dark text-white">Local storage</div>
-        <div class="card-body">
+          <br>
           <div class="form-check">
-            <button class="btn btn-secondary" id="restoreDatabaseButton">Restore annotations</button>
-            <button class="btn btn-secondary" id="backupDatabaseButton">Backup annotations</button>
-            <button class="btn btn-secondary" id="deleteDatabaseButton">Delete annotations</button>
+            <label for="acquaintanceParameterInput">What is the threshold value to be a Acquaintance?</label>
+            <input type="number" id="acquaintanceParameterInput" min="2" max="10">
+            <button id="acquaintanceParameterButton">Save</button>
+            <label id="acquaintanceParameterMessage"></label>
           </div>
         </div>
       </div>
Index: package-lock.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/package-lock.json b/package-lock.json
--- a/package-lock.json	(revision 6b4dcce0a4b6d83e253bfbc9d644441861c86f9c)
+++ b/package-lock.json	(date 1700124838149)
@@ -3061,6 +3061,11 @@
         "hoek": "2.x.x"
       }
     },
+    "bootstrap": {
+      "version": "5.3.2",
+      "resolved": "https://registry.npmjs.org/bootstrap/-/bootstrap-5.3.2.tgz",
+      "integrity": "sha512-D32nmNWiQHo94BKHLmOrdjlL05q1c8oxbtBphQFb9Z5to6eGRDCm0QgeaZ4zFBHzfg2++rqa2JkqCcxDy0sH0g=="
+    },
     "brace-expansion": {
       "version": "1.1.11",
       "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz",
@@ -11813,8 +11818,7 @@
     "lodash": {
       "version": "4.17.21",
       "resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.21.tgz",
-      "integrity": "sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==",
-      "dev": true
+      "integrity": "sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg=="
     },
     "lodash._baseassign": {
       "version": "3.2.0",
Index: app/styles/options.scss
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/styles/options.scss b/app/styles/options.scss
new file mode 100644
--- /dev/null	(date 1700126191967)
+++ b/app/styles/options.scss	(date 1700126191967)
@@ -0,0 +1,35 @@
+@import '../../node_modules/bootstrap/scss/bootstrap';
+
+div[aria-hidden="true"] {
+  display: none;
+}
+
+.requiredFormInput:after {
+  color: red;
+  content: " *";
+}
+
+input:invalid {
+  border-color: red;
+  border-width: 2px;
+}
+
+#toolset[aria-hidden="true"]{
+  display:none;
+}
+
+.toolButton {
+  width: 32px;
+  cursor: pointer;
+}
+
+.toolButton:hover {
+  background-color: rgba(0, 0, 0, 0.1);
+  border-radius: 3px;
+}
+
+.clickableInfoSpan {
+  font-weight: bold;
+  cursor: pointer;
+}
+
Index: package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\n  \"name\": \"dblpExtension\",\n  \"private\": true,\n  \"version\": \"0.1.10\",\n  \"description\": \"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\",\n  \"scripts\": {\n    \"start\": \"npm run dev:chrome\",\n    \"build\": \"npm run build:chrome\",\n    \"build:chrome\": \"gulp pack --production --vendor=chrome\",\n    \"build:firefox\": \"gulp pack --production --vendor=firefox\",\n    \"build:opera\": \"gulp pack --production --vendor=opera\",\n    \"build:edge\": \"gulp pack --production --vendor=edge\",\n    \"dev\": \"npm run dev:chrome\",\n    \"dev:chrome\": \"gulp --watch --vendor=chrome\",\n    \"dev:firefox\": \"gulp --watch --vendor=firefox\",\n    \"dev:opera\": \"gulp --watch --vendor=opera\",\n    \"dev:edge\": \"gulp --watch --vendor=edge\",\n    \"lint\": \"standard\",\n    \"postinstall\": \"npm install node-sass\",\n    \"test\": \"mocha test/**/*.js\"\n  },\n  \"standard\": {\n    \"globals\": [\n      \"chrome\"\n    ]\n  },\n  \"dependencies\": {\n    \"axios\": \"^0.21.1\",\n    \"chart.js\": \"^4.4.0\",\n    \"chartjs-node-canvas\": \"^4.1.6\",\n    \"circular-json-es6\": \"^2.0.2\",\n    \"jquery\": \"^3.5.1\",\n    \"jquery-contextmenu\": \"^2.9.2\",\n    \"jquery-csv\": \"^0.8.12\",\n    \"js-sha256\": \"^0.9.0\",\n    \"json-form-data\": \"^1.7.2\",\n    \"jspdf\": \"^1.5.3\",\n    \"query-string\": \"^6.13.7\",\n    \"sweetalert2\": \"^10.7.12\",\n    \"wildcard\": \"^1.1.2\"\n  },\n  \"devDependencies\": {\n    \"@babel/cli\": \"^7.14.3\",\n    \"@babel/core\": \"^7.14.3\",\n    \"@babel/plugin-proposal-class-properties\": \"^7.13.0\",\n    \"@babel/plugin-proposal-export-default-from\": \"^7.12.13\",\n    \"@babel/plugin-syntax-async-generators\": \"^7.8.4\",\n    \"@babel/preset-env\": \"^7.14.2\",\n    \"@babel/register\": \"^7.13.16\",\n    \"@popperjs/core\": \"^2.9.2\",\n    \"babel-core\": \"^7.0.0-bridge.0\",\n    \"babel-eslint\": \"^10.1.0\",\n    \"babel-loader\": \"^8.2.2\",\n    \"chai\": \"^4.2.0\",\n    \"debounce\": \"^1.2.0\",\n    \"del\": \"3.x.x\",\n    \"dotenv\": \"^5.0.1\",\n    \"eslint\": \"^4.19.1\",\n    \"eslint-config-standard\": \"^11.0.0\",\n    \"eslint-loader\": \"^2.2.1\",\n    \"eslint-plugin-import\": \"^2.22.1\",\n    \"eslint-plugin-jasmine\": \"^2.10.1\",\n    \"eslint-plugin-node\": \"^6.0.1\",\n    \"eslint-plugin-promise\": \"^3.8.0\",\n    \"eslint-plugin-standard\": \"^3.1.0\",\n    \"gulp\": \"^4.0.2\",\n    \"gulp-bump\": \"^3.2.0\",\n    \"gulp-cache\": \"^1.1.3\",\n    \"gulp-clean-css\": \"^3.10.0\",\n    \"gulp-filter\": \"^5.1.0\",\n    \"gulp-git\": \"^2.10.1\",\n    \"gulp-if\": \"2.x.x\",\n    \"gulp-imagemin\": \"^4.1.0\",\n    \"gulp-json-transform\": \"^0.4.7\",\n    \"gulp-less\": \"^3.5.0\",\n    \"gulp-livereload\": \"3.x.x\",\n    \"gulp-mocha\": \"^7.0.2\",\n    \"gulp-plumber\": \"^1.2.1\",\n    \"gulp-sass\": \"^4.1.0\",\n    \"gulp-sequence\": \"^1.0.0\",\n    \"gulp-sourcemaps\": \"^2.6.5\",\n    \"gulp-tag-version\": \"^1.3.1\",\n    \"gulp-util\": \"latest\",\n    \"gulp-zip\": \"^4.2.0\",\n    \"jasmine-core\": \"^3.6.0\",\n    \"js-yaml\": \"^3.14.0\",\n    \"mocha\": \"^6.2.0\",\n    \"natives\": \"^1.1.6\",\n    \"node-sass\": \"^4.14.1\",\n    \"puppeteer\": \"^2.1.1\",\n    \"require-dir\": \"^1.2.0\",\n    \"standard\": \"^11.0.1\",\n    \"vinyl-named\": \"1.x.x\",\n    \"webpack\": \"^5.37.1\",\n    \"webpack-cli\": \"^4.7.0\",\n    \"webpack-dev-server\": \"^3.11.2\",\n    \"webpack-stream\": \"^6.1.2\",\n    \"yargs\": \"^11.1.1\"\n  }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/package.json b/package.json
--- a/package.json	(revision 6b4dcce0a4b6d83e253bfbc9d644441861c86f9c)
+++ b/package.json	(date 1700124837849)
@@ -26,6 +26,7 @@
   },
   "dependencies": {
     "axios": "^0.21.1",
+    "bootstrap": "^5.3.2",
     "chart.js": "^4.4.0",
     "chartjs-node-canvas": "^4.1.6",
     "circular-json-es6": "^2.0.2",
@@ -35,6 +36,7 @@
     "js-sha256": "^0.9.0",
     "json-form-data": "^1.7.2",
     "jspdf": "^1.5.3",
+    "lodash": "^4.17.21",
     "query-string": "^6.13.7",
     "sweetalert2": "^10.7.12",
     "wildcard": "^1.1.2"
